{"version":3,"file":"vendors-cdd60c62.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./node_modules/axios/lib/utils.js","webpack://restaurant-apps/./node_modules/idb/build/index.js"],"sourcesContent":["'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n"],"names":["toString","Object","prototype","getPrototypeOf","kindOf","cache","create","thing","str","call","slice","toLowerCase","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","map","forEach","obj","fn","allOwnKeys","i","l","length","keys","getOwnPropertyNames","len","key","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","hasOwnProperty","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","token","Math","random","callbacks","addEventListener","source","data","shift","cb","push","setTimeout","asap","queueMicrotask","bind","process","nextTick","isBuffer","constructor","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","this","assignValue","targetKey","arguments","extend","a","b","thisArg","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","defineProperty","value","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","m","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","isSpecCompliantForm","toJSONObject","stack","visit","target","reducedValue","isThenable","then","catch","instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","transactionDoneMap","WeakMap","transformCache","reverseTransformCache","idbProxyTraps","get","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","has","replaceTraps","callback","wrapFunction","func","IDBCursor","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","request","transformCachableValue","tx","Promise","resolve","reject","unlisten","removeEventListener","complete","error","DOMException","cacheDonePromiseForTransaction","IDBDatabase","IDBObjectStore","IDBIndex","Proxy","IDBRequest","promise","success","promisifyRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","transaction","db","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","method","async","storeName","store","index","all","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","delete","isIteratorProp","asyncIterator"],"sourceRoot":""}